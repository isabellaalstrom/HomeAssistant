##################################################
## Customize
##################################################

#homeassistant:
#  customize:
#    sensor.current_version:
#      friendly_name: Installed version
#      icon: mdi:information-outline
#    sensor.ha_latest_version:
#      friendly_name: Latest version
#      icon: mdi:update
#    sensor.hass_uptime:
#      friendly_name: Uptime
#      icon: mdi:arrow-up-bold-circle-outline
#    sensor.nicxehomeassistant_last_build_state:
#      friendly_name: Last Build State


##################################################
## Sensors
##################################################

sensor:
  - platform: version
  - platform: uptime
  - platform: command_line
    command: python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"
    name: HA latest Version


  - platform: glances
    host: 192.168.156.2
    port: 61208
    ssl: true
    verify_ssl: false
    username: !secret usernamne
    password: !secret passwd
    version: 3
    resources:
      - 'disk_use_percent'
      - 'disk_use'
      - 'disk_free'
      - 'memory_use_percent'
      - 'memory_use'
      - 'memory_free'
      - 'swap_use_percent'
      - 'swap_use'
      - 'swap_free'
      - 'processor_load'
      - 'process_running'
      - 'process_total'
      - 'process_thread'
      - 'process_sleeping'
      - 'cpu_use_percent'
      - 'cpu_temp'
      - 'docker_active'
      - 'docker_cpu_use'
      - 'docker_memory_use'


##################################################
## Automations
##################################################




automation:


#automation:
#  - alias: "HA startup"
#    initial_state: 'on'
#    trigger:
#      platform: homeassistant
#      event: start
#    action:
#      - delay:
#          minutes: 2
#      - service: notify.ios_niklas_iphone_8
#        data:
#          title: "HASS System"
#          message: "HASS version {{ states.sensor.current_version.state }} Ã¤r online"
#      - service: notify.ios_niklas_iphone_8
#        data:
#          message: "request_location_update"
#      - service: notify.ios_hannas_iphone
#        data:
#          message: "request_location_update"
#      - service: cloud.remote_connect


  - alias: "Update available"
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: sensor.ha_latest_version
    action:
      - service: notify.niklas
        data:
          title: "HASS System"
          message: "Home Assistant {{ states.sensor.ha_latest_version.state }} is now available."
      - service: input_boolean.turn_on
        entity_id: input_boolean.hass_update


#  - alias: Hass New Device Tracked
#    initial_state: 'on'
#    trigger:
#      platform: event
#      event_type: device_tracker_new_device
#    action:
#
#      - service: notify.niklas
#        data_template:
#          message: >
#            New device tracked, {{trigger.event.data.host_name}} ({{trigger.event.data.entity_id}})


  - alias: forward_persistent_notifications
    initial_state: 'on'
    trigger:
      - platform: event
        event_type: call_service
        event_data:
          domain: persistent_notification
          service: create
    action:
      - service: notify.niklas
        data_template:
          message: >-
            {% set message = trigger.event.data.service_data.message %}
            {% if 'invalid authentication' in message or 'login attempt' in message %}
              {{ message }}: http://www.ip-tracker.org/locator/ip-lookup.php?ip={{ message.split('from ')[1] }}
            {% else %}
              {{ message }}
            {% endif %}
